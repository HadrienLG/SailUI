esphome:
  name: sailuim5stack
  platform: ESP32
  board: m5stack-fire

wifi:
  ssid: "SailUI"
  password: "openplotter"

captive_portal:

# Enable logging
logger:


mqtt:
  id : mqtt_client
  broker: 10.3.141.1
  port: 1883

  
web_server:
  port: 80


time:
  - platform: sntp
    id: esptime


spi: 
  clk_pin: 18
  mosi_pin: 23
  miso_pin: 19


display:
  - platform: ili9341
    model: M5Stack
    cs_pin: 14
    dc_pin: 27
    led_pin: 32  ### see note below ###
    reset_pin: 33
    id: ecran
    pages:
      - id: pageA
        lambda: |-
          // DISPLAY - supposed to be 320x240 px
          it.fill(COLOR_BLACK);
    
          // HEADER - Draw a filled rectangle as a header.
          it.strftime(4, 4, id(helvetica_20), id(my_red), TextAlign::LEFT, "%Y-%m-%d %H:%M:%S", id(esptime).now());
          it.filled_rectangle(0, 30, 320, 2);
    
          // MAIN VALUES
          it.filled_rectangle(159, 30, 2, 240);
    
          it.printf(4, 36, id(helvetica_16), id(my_green), TextAlign::LEFT, "Speed");  
          it.printf(5, 80, id(helvetica_40), id(my_green), TextAlign::LEFT, "%s", id(textVit).state.c_str());  
          it.printf(135, 137, id(helvetica_16), id(my_green), TextAlign::LEFT, "kt");  
    
          it.printf(164, 36, id(helvetica_16), id(my_blue), TextAlign::LEFT, "Heading");
          it.printf(165, 80, id(helvetica_40), id(my_blue), TextAlign::LEFT, "%s", id(textCap).state.c_str());
          it.printf(280, 137, id(helvetica_16), id(my_blue), TextAlign::LEFT, "deg");
          it.filled_rectangle(0, 160, 320, 2);
    
          // FOOTER
          it.printf(4, 165, id(helvetica_16), id(my_green), TextAlign::LEFT, "VMG");  
          it.printf(35, 190, id(helvetica_32), id(my_green), TextAlign::LEFT, "%s", id(textVMG).state.c_str());  
          it.printf(135, 217, id(helvetica_16), id(my_green), TextAlign::LEFT, "kt");  
    
          it.printf(164, 165, id(helvetica_16), id(my_blue), TextAlign::LEFT, "TWA");
          it.printf(195, 190, id(helvetica_32), id(my_blue), TextAlign::LEFT, "%s", id(textTWA).state.c_str());
          it.printf(280, 217, id(helvetica_16), id(my_blue), TextAlign::LEFT, "deg");
      - id: pageB
        lambda: |-
          it.print(0, 10, id(helvetica_32), "This is page B!");
      - id: pageC
        lambda: |-
          it.print(0, 10, id(helvetica_32), "This is page C!");


text_sensor:
  - platform: mqtt_subscribe
    name: "Vitesse"
    id: textVit
    topic: gps/info/vitesse
  - platform: mqtt_subscribe
    name: "Cap"
    id: textCap
    topic: gps/info/cap
  - platform: mqtt_subscribe
    name: "VMG"
    id: textVMG
    topic: gps/info/vmg
  - platform: mqtt_subscribe
    name: "TWA"
    id: textTWA
    topic: gps/info/twa



font:
  - file: "Helvetica.ttf"
    id: helvetica_16
    size: 16
  - file: "Helvetica.ttf"
    id: helvetica_32
    size: 32
  - file: "Helvetica.ttf"
    id: helvetica_40
    size: 40
  - file: "Helvetica.ttf"
    id: helvetica_20
    size: 20
    

color:
  - id: my_red
    red: 100%
    green: 3%
    blue: 5%
  - id: my_blue
    red: 3%
    green: 5%
    blue: 100%
  - id: my_green
    red: 5%
    green: 100%
    blue: 3%

binary_sensor:
  - platform: gpio
    name: "Button A"
    pin: GPIO39
    on_press:
      then:
        - display.page.show: pageA
  - platform: gpio
    name: "Button B"
    pin: GPIO38
    on_press:
      then:
        - display.page.show: pageB
  - platform: gpio
    name: "Button C"
    pin: GPIO37
    on_press:
      then:
        - display.page.show: pageC